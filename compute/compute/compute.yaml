Parameters:
  NetworkStackName:
    Type: String
    Default: Network
  Environment:
    Type: String
    Default: Production
  ImageId:
    Type: String
    Default: ami-0f403e3180720dd7e
  Keypair:
    Description: Select keypair for AutoScalingGroup Instance
    Type: AWS::EC2::KeyPair::KeyName
  ALBStack:
    Description: Input the name of ALB Stack
    Type: String
    Default: WebAppALB

  
Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow https
      VpcId: 
        Fn::ImportValue:
          !Sub '${NetworkStackName}-MyVPCId'
      SecurityGroupIngress:
        - IpProtocol: -1 
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Security Group Server

# # Create a Instance Profile For Fetching Parameter Store
#   MyEC2Role: 
#     Type: "AWS::IAM::Role"
#     Properties: 
#       AssumeRolePolicyDocument: 
#         Version: "2012-10-17"
#         Statement: 
#           - Effect: "Allow"
#             Principal: 
#               Service: 
#                 - "ec2.amazonaws.com"
#             Action: 
#               - "sts:AssumeRole"
#       Path: "/"
#   MyEC2RolePolicies: 
#     Type: "AWS::IAM::Policy"
#     Properties: 
#       PolicyName: "EC2RoleSSMGetParameter"
#       PolicyDocument: 
#         Version: "2012-10-17"
#         Statement: 
#           - Effect: "Allow"
#             Action: "ssm:GetParameter"
#             Resource: "*"
#       Roles: 
#         - Ref: "MyEC2Role"
#   MyEC2InstanceProfile: 
#     Type: "AWS::IAM::InstanceProfile"
#     Properties: 
#       Path: "/"
#       Roles: 
#         - Ref: "MyEC2Role"
  

# Create Launch Template
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub '${AWS::StackName}-launch-template'
      LaunchTemplateData: 
        BlockDeviceMappings: 
          - Ebs:
              VolumeSize: 22
              VolumeType: gp2
              DeleteOnTermination: true
              Encrypted: true
            DeviceName: /dev/xvdcz
        CreditSpecification: 
          CpuCredits: Unlimited
        Monitoring: 
          Enabled: true
        ImageId: !Ref ImageId #ami-03a6eaae9938c858c 
        InstanceType: t3.micro
        # IamInstanceProfile:
        #   Arn: !GetAtt
        #     - MyEC2InstanceProfile
        #     - Arn
        SecurityGroupIds: 
          - !GetAtt "InstanceSecurityGroup.GroupId"
        KeyName: !Ref Keypair
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/bash
              setenforce 0
              useradd compnet
              echo "Compnet123456" | passwd --stdin compnet
              usermod -aG wheel compnet
              cat >> /etc/ssh/sshd_config << EOF
              Match User compnet
                PasswordAuthentication yes
              EOF
              sed 's/PasswordAuthentication no/PasswordAuthentication yes/' -i /etc/ssh/sshd_config
              systemctl restart sshd
              githubtoken=$(aws ssm get-parameter --name "githubtoken" --query "Parameter.Value" --output text)
              yum install -y nginx git
              systemctl enable --now nginx
              git clone https://github.com/zidnifarhan21/cf-demo
              cd cf-demo
              cp web/* /usr/share/nginx/html/
              systemctl restart nginx

# Create Auto Scaling Group
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - us-east-1a
        - us-east-1b
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      TargetGroupARNs:
        - !ImportValue
          Fn::Sub: ${ALBStack}-TargetGroupArn
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub '${NetworkStackName}-PrivateSubnet1Id'
        - Fn::ImportValue:
            !Sub '${NetworkStackName}-PrivateSubnet2Id'
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-ScalingGroup'
          PropagateAtLaunch: True

